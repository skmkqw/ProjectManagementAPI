@using ProjectPulse.DataAccess.DTOs.Tasks

<div class="modal fade @ModalClass" tabindex="-1" role="dialog" style="display:@DisplayStyle; width: 100vw; height: 100vh; align-items: center; justify-content: center;" aria-hidden="true">
    <div>
        <div class="modal-dialog add-project-modal-body" role="document" style="min-width: 500px">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Task</h5>
                    <button type="button" class="close" aria-label="Close" @onclick="CloseModal">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div>
                        <EditForm Model="NewTask" OnValidSubmit="HandleTaskCreation" class="add-project-form">
                            <div class="form-group add-project-form-group">
                                <label for="projectName">Task Name</label>
                                <InputText id="projectName" class="form-control" @bind-Value="NewTask.Title" placeholder="Enter task name"></InputText>
                            </div>
                            <div class="form-group add-project-form-group">
                                <label for="projectDescription">Task Description</label>
                                <InputText id="projectDescription" class="form-control" @bind-Value="NewTask.Description" placeholder="Enter task description"></InputText>
                            </div>
                            <div class="add-project-form-submit">
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }
    
    [Parameter]
    public bool DisplayModal { get; set; }
    
    private string ModalClass => DisplayModal ? "show" : "";
    private string DisplayStyle => DisplayModal ? "flex" : "none";
    

    private void CloseModal()
    {
        DisplayModal = false;
        OnClose.InvokeAsync(DisplayModal);
    }

    [SupplyParameterFromForm] 
    public CreateTaskDto NewTask { get; set; } = new ();
    
    [Parameter]
    public EventCallback<CreateTaskDto> CreateTaskCallback { get; set; }

    private void HandleTaskCreation()
    {
        CreateTaskCallback.InvokeAsync(NewTask);
        CloseModal();
    }
}