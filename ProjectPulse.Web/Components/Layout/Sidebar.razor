@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using ProjectPulse.DataAccess.DTOs.Projects
@using ProjectPulse.Web.Services.Projects
@using ProjectPulse.Web.Services.Users
@rendermode InteractiveServer


@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject IUsersService UsersService
@inject IProjectsService ProjectsService

@if (DisplayModal)
{
    <AddProject DisplayModal="DisplayModal" OnClose="OnModalClose" CreateProjectCallback="CreateProject"></AddProject>
}
<div class="sidebar" id="sidebar">
    <div class="sidebar-content">
        <div class="row border-bottom">
            <div class="sidebar-head" id="sidebar-head">
                <div class="sidebar-head-logo">
                    <img src="img/logo.svg" alt="">
                    <p>ProjectPulse</p>
                </div>
                <div class="sidebar-head-hide" id="hide-sidebar" @onclick="HideSidebar">
                    <img src="img/hide_sidebar.svg" alt="">
                </div>
            </div>
        </div>
        <div class="row border-bottom sidebar-options">
            <div class="sidebar-options-content">
                <NavItem Title="Home" ToPage="/" IconPath="img/home.svg"></NavItem>
                <NavItem Title="Messages" ToPage="/Messages" IconPath="img/message.svg"></NavItem>
                <NavItem Title="Tasks" ToPage="/Tasks" IconPath="img/tasks.svg"></NavItem>
                <NavItem Title="Members" ToPage="/Members" IconPath="img/members.svg"></NavItem>
                <NavItem Title="Settings" ToPage="/Settings" IconPath="img/settings.svg"></NavItem>
            </div>
        </div>
        <div class="row sidebar-projects">
            <div class="sidebar-projects-head">
                <p>My projects</p>
                <img src="img/add-project.svg" alt="" data-bs-toggle="modal" data-bs-target="#addProjectModal" @onclick="ShowModal">
            </div>
            <div class="sidebar-projects-content">
                @foreach (ProjectDto project in Projects!)
                {
                    <div class="sidebar-projects-content-item" @onclick="() => HandleProjectClick(project.Id)">
                        <span class="project-circle"></span>
                        <p>@project.Name</p>
                    </div> 
                }
            </div>
        </div>
    </div>
</div>

@code {
    
    [Parameter]
    public List<ProjectDto>? Projects { get; set; } = new ();
    
    public bool DisplayModal { get; set; }

    private void ShowModal()
    {
        DisplayModal = true;
    }

    private void OnModalClose(bool isOpen)
    {
        DisplayModal = isOpen;
    }
    
    private async Task GetProjects(string userId)
    {
        var projects = await ProjectsService.GetProjects(userId);
        Projects = projects;
        StateHasChanged();
    }

    private async Task CreateProject(CreateProjectDto newProject)
    {
        string userId = UsersService.GetUserId();
        await ProjectsService.CreateProject(newProject, userId);
        await GetProjects(userId);
    }

    private async Task HideSidebar()
    {
        await JS.InvokeVoidAsync("HandleCloseSidebar");
    }

    private async Task HandleProjectClick(Guid projectId)
    {
        await JS.InvokeVoidAsync("HandleProjectTabClick");
        Navigation.NavigateTo($"/Project/{projectId}");
    }
}